#BlueJ class context
comment0.params=bytes\ from\ thru
comment0.target=Kim(byte[],\ int,\ int)
comment0.text=\n\ Make\ a\ kim\ from\ a\ portion\ of\ a\ byte\ array.\n\n\ @param\ bytes\n\ \ \ \ \ \ \ \ \ \ \ \ A\ byte\ array.\n\ @param\ from\n\ \ \ \ \ \ \ \ \ \ \ \ The\ index\ of\ the\ first\ byte.\n\ @param\ thru\n\ \ \ \ \ \ \ \ \ \ \ \ The\ index\ of\ the\ last\ byte\ plus\ one.\n
comment1.params=bytes\ length
comment1.target=Kim(byte[],\ int)
comment1.text=\n\ Make\ a\ kim\ from\ a\ byte\ array.\n\n\ @param\ bytes\n\ \ \ \ \ \ \ \ \ \ \ \ The\ byte\ array.\n\ @param\ length\n\ \ \ \ \ \ \ \ \ \ \ \ The\ number\ of\ bytes.\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Produce\ a\ UTF-16\ String\ from\ this\ kim.\ The\ number\ of\ codepoints\ in\ the\n\ string\ will\ not\ be\ greater\ than\ the\ number\ of\ bytes\ in\ the\ kim,\ although\n\ it\ could\ be\ less.\n\n\ @return\ The\ string.\ A\ kim\ memoizes\ its\ string\ representation.\n\ @throws\ JSONException\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ the\ kim\ is\ not\ valid.\n
comment2.params=kim\ from\ thru
comment2.target=Kim(org.json.Kim,\ int,\ int)
comment2.text=\n\ Make\ a\ new\ kim\ from\ a\ substring\ of\ an\ existing\ kim.\ The\ coordinates\ are\n\ in\ byte\ units,\ not\ character\ units.\n\n\ @param\ kim\n\ \ \ \ \ \ \ \ \ \ \ \ The\ source\ of\ bytes.\n\ @param\ from\n\ \ \ \ \ \ \ \ \ \ \ \ The\ point\ at\ which\ to\ take\ bytes.\n\ @param\ thru\n\ \ \ \ \ \ \ \ \ \ \ \ The\ point\ at\ which\ to\ stop\ taking\ bytes.\n
comment3.params=string
comment3.target=Kim(java.lang.String)
comment3.text=\n\ Make\ a\ kim\ from\ a\ string.\n\n\ @param\ string\n\ \ \ \ \ \ \ \ \ \ \ \ The\ string.\n\ @throws\ JSONException\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ surrogate\ pair\ mismatch.\n
comment4.params=at
comment4.target=int\ characterAt(int)
comment4.text=\n\ Returns\ the\ character\ at\ the\ specified\ index.\ The\ index\ refers\ to\ byte\n\ values\ and\ ranges\ from\ 0\ to\ length\ -\ 1.\ The\ index\ of\ the\ next\ character\n\ is\ at\ index\ +\ Kim.characterSize(kim.characterAt(index)).\n\n\ @param\ at\n\ \ \ \ \ \ \ \ \ \ \ \ the\ index\ of\ the\ char\ value.\ The\ first\ character\ is\ at\ 0.\n\ @returns\ a\ Unicode\ character\ between\ 0\ and\ 0x10FFFF.\n\ @throws\ JSONException\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ at\ does\ not\ point\ to\ a\ valid\ character.\n
comment5.params=character
comment5.target=int\ characterSize(int)
comment5.text=\n\ Returns\ the\ number\ of\ bytes\ needed\ to\ contain\ the\ character\ in\ Kim\n\ format.\n\n\ @param\ character\n\ \ \ \ \ \ \ \ \ \ \ \ a\ Unicode\ character\ between\ 0\ and\ 0x10FFFF.\n\ @return\ 1,\ 2,\ or\ 3\n\ @throws\ JSONException\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ the\ character\ is\ not\ representable\ in\ a\ kim.\n
comment6.params=bytes\ at
comment6.target=int\ copy(byte[],\ int)
comment6.text=\n\ Copy\ the\ contents\ of\ this\ kim\ to\ a\ byte\ array.\n\n\ @param\ bytes\n\ \ \ \ \ \ \ \ \ \ \ \ A\ byte\ array\ of\ sufficient\ size.\n\ @param\ at\n\ \ \ \ \ \ \ \ \ \ \ \ The\ position\ within\ the\ byte\ array\ to\ take\ the\ byes.\n\ @return\ The\ position\ immediately\ after\ the\ copy.\n
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Two\ kim\ objects\ containing\ exactly\ the\ same\ bytes\ in\ the\ same\ order\ are\n\ equal\ to\ each\ other.\n\n\ @param\ obj\n\ \ \ \ \ \ \ \ \ \ \ \ the\ other\ kim\ with\ which\ to\ compare.\n\ @returns\ true\ if\ this\ and\ obj\ are\ both\ kim\ objects\ containing\ identical\n\ \ \ \ \ \ \ \ \ \ byte\ sequences.\n
comment8.params=at
comment8.target=int\ get(int)
comment8.text=\n\ Get\ a\ byte\ from\ a\ kim.\n\ @param\ at\n\ \ \ \ \ \ \ \ \ \ \ \ The\ position\ of\ the\ byte.\ The\ first\ byte\ is\ at\ 0.\n\ @return\ The\ byte.\n\ @throws\ JSONException\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ there\ is\ no\ byte\ at\ that\ position.\n
comment9.params=
comment9.target=int\ hashCode()
comment9.text=\n\ Returns\ a\ hash\ code\ value\ for\ the\ kim.\n
numComments=11
